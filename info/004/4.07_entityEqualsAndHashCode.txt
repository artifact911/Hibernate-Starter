Из-за ByDirectional связи, мы ловили проблему stackOverflow, т.к. User имел ссылку на Company, а Company ссылку на User
     и при попытке положить юзеров в set вызывался eqAndHashCode и получалось замыкание. Такое же случиться при
     использовании Map.

Проблема известная и сложная. Что кажется:
    Можно заиспользовать для toString() и для EqAndHc id сущности. Оно же уникальное? Но нет, проблема будет при
    добавлении таких сущностей. Пока мы не выполним запрос в БД, мы не засетаем сущности id, а значит id в момент того,
    как мы кладем в set будет null. Если сущностей много, то у всех null. А hashSet возьмет только одну.

Что нужно делать на самом деле:
    Для EqAndHc искать натуральный какой-то ключ. Например, мы знает, что у юзера поле username notNull и unique -
    используем для этого!
    А из toString() исключаем зависимую сущность.

    Для Юзера:
        @EqualsAndHashCode(of = "username")
        @ToString(exclude = "company")

        @Column(nullable = false, unique = true)
        private String username;

    Для Компании:
        @EqualsAndHashCode(of = "name")

        @Column(nullable = false, unique = true)
        private String name;

!! если мы такого поля на смогли выявить в нашей сущности, то переопределяем по всем полям, кроме тех, которые вызывают
    зацикливание