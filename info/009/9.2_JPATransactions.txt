!!! Лучше не выставлять уровни изолированности, а использовать те, которые по дефолту в нашей СУБД, и если нужно
    то устанавливать их на уровне отдельных транзакций, где это нужно.

Везде, где мы работае в сессией, есть риск того, что что-то отвалится и нам нужно городить
       try {
            session.beginTransaction();
            session.getTransaction().commit();
            } catch (Exception e) {
              session.getTransaction().rollback();
              throw e;
              }

    Но это еще не все. А что если возникнет исключение, когда мы захотим сделать rollback? Понятно, что приходится много
        заниматься обработкой исключений и это не удобно.
    Есть @Transactional - просто, как аннотация. Любой следующие ей, должен реализовать логику по работе транзакций
        самостоятельно. В Хибернейт такой реализации из коробки нет. Есть в Spring - оборачивается наш объект в прокси,
        который и решает все наши проблемы по работе с транзакциями.

Уровни изолированности:
    Можно устанавливать в hibernate.cfg.xml
          <property name="hibernate.connection.isolation">8</property>
    Бывает 4 уровня изоляции: 1, 2, 4, 8 (до изобретения енамов, поэтому тут цифры). По умолчанию в хибере - 2;

    Посмотреть текущий уровень изоляции:
      session.doWork(connection -> System.out.println(connection.getTransactionIsolation()));
    Можно и сетать уровень изоляции, но не нужно!!! Делвем это в пропертях