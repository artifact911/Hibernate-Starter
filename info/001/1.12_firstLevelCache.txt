Кэш Hibernate

    Чтобы в persistenceContext появилась какая-то сущность, сначала выполнится запрос в БД

    Если мы отправим два одинкокавых запроса в пределах одной сессии, то мы увидим, что выполнится только один
    запрос в БД

      User user1 = session.get(User.class, "ivan112@gmail.com");
      User user2 = session.get(User.class, "ivan112@gmail.com");

    Мы можем в дебаге посмотреть, что у сесси есть поле persistenceContext - это и есть кэш первого уровня.

    Если мы можим удалить из кэша нашу сужность, то у session есть методы:
        session.evict(user1) - удилим из кэша user1
        session.clear() - удалит все сущности из кэша
      - если сессия закроется session.close() или try-with-resources закроет сессию.

    Любое зменение сущности, который лежит в persistenceContext нашей сессии, т.е. в кэше первого уровня, повлечет
        запрос в БД и к сущности применятся изменения.

          User user = session.get(User.class, "ivan112@gmail.com");
          user.setLastname("Petrov");
          session.getTransaction().commit();

        Мы не шлем в таком случае update. Хибер это сделает за нас.
        Это понятие называется dirtySession - когда мы во время сессии изменяем нашу сущность.

         // так мы в ручную заставили синхронизировать изменения с БД до закрытия сессии;
         session.flush();
