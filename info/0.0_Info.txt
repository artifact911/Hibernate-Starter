1. Транзакциями мы управляем вречную. Не autoCommitMod.
         session.beginTransaction(); - открыли
         session.getTransaction().commit(); - закоммитили, если успех
         session.getTransaction().rollback(); - откатили

2. По умолчанию Hibernate берет название класса/полей в качестве названия таблицы/колонок в БД (SQL не чувствителен
        к регистру). Если у нас есть разница, то юзаем аннотации:
            @Table(name = "users", schema = "public") - если название таблицы отличное от названия класса-entity;
            @Column(name = "birth_date") - если название колонки отличное от названия поля;

3. Любое зменение сущности, который лежит в persistenceContext нашей сессии, т.е. в кэше первого уровня, повлечет
    запрос в БД и к сущности применятся изменения. Это понятие называется dirtySession - когда мы во время сессии
    изменяем нашу сущность.
    Чтобы в persistenceContext появилась какая-то сущность, сначала выполнится запрос в БД
