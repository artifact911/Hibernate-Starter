
DROP TABLE users;

CREATE TABLE users (
username VARCHAR(128) PRIMARY KEY,
firstname VARCHAR(128),
lastname VARCHAR(128),
birth_date DATE,
age INT,
role VARCHAR(32)
);

CREATE TABLE users (
username VARCHAR(128) PRIMARY KEY,
firstname VARCHAR(128),
lastname VARCHAR(128),
birth_date DATE,
role VARCHAR(32),
info JSONB
);

CREATE TABLE users
(
id         BIGSERIAL PRIMARY KEY,
username   VARCHAR(128) UNIQUE,
firstname  VARCHAR(128),
lastname   VARCHAR(128),
birth_date DATE,
role       VARCHAR(32),
info       JSONB
);

CREATE TABLE users
(
id         BIGINT PRIMARY KEY,
username   VARCHAR(128) UNIQUE,
firstname  VARCHAR(128),
lastname   VARCHAR(128),
birth_date DATE,
role       VARCHAR(32),
info       JSONB
);

create sequence users_id_seq
owned by users.id;

4.01 - ManyToOne
    CREATE TABLE users
    (
        id         BIGSERIAL PRIMARY KEY,
        firstname  VARCHAR(128),
        lastname   VARCHAR(128),
        birth_date DATE,
        username   VARCHAR(128) UNIQUE ,
        role       VARCHAR(32),
        info       JSONB,
        company_id INT REFERENCES company(id)
    );

    CREATE TABLE company
    (
        id SERIAL PRIMARY KEY ,
        name VARCHAR(64) NOT NULL UNIQUE
    );

4.12 - OneToOne
    CREATE TABLE profile
    (
       id BIGSERIAL PRIMARY KEY ,
       user_id BIGINT NOT NULL UNIQUE REFERENCES users(id),
       street VARCHAR(128) ,
       language CHAR(2)
    );

4.13 - ManyToMany
    CREATE TABLE chat
    (
    id BIGSERIAL PRIMARY KEY ,
    name VARCHAR(64) NOT NULL UNIQUE
    );

    CREATE TABLE users_chat
    (
        user_id BIGINT REFERENCES users(id),
        chat_id BIGINT REFERENCES chat(id),
        PRIMARY KEY (user_id, chat_id)
    );

4.14 - ManyToMany Separate Entities

    CREATE TABLE users_chat
    (
        id BIGSERIAL PRIMARY KEY ,
        user_id BIGINT REFERENCES users(id),
        chat_id BIGINT REFERENCES chat(id),
        created_at TIMESTAMP NOT NULL ,
        created_by VARCHAR(128) NOT NULL
    );
